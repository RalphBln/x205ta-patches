diff --git a/sound/soc/codecs/rt5645.c b/sound/soc/codecs/rt5645.c
index e149f3ce5401..3dba1b6b02b8 100644
--- a/sound/soc/codecs/rt5645.c
+++ b/sound/soc/codecs/rt5645.c
@@ -3242,11 +3242,21 @@ static void rt5645_jack_detect_work(struct work_struct *work)
 		val = snd_soc_read(rt5645->codec, RT5645_A_JD_CTRL1) & 0x0070;
 		break;
 	default: /* 1 port */
-		val = snd_soc_read(rt5645->codec, RT5645_A_JD_CTRL1) & 0x0020;
+		//val = snd_soc_read(rt5645->codec, RT5645_A_JD_CTRL1) & 0x0020;
+		gpio_state = gpiod_get_value(rt5645->gpiod_hp_det);
+		printk(KERN_ERR "gpio_state = %d\n",
+		       gpio_state);
+
+		
+		val = snd_soc_read(rt5645->codec, RT5645_A_JD_CTRL1);
+		val = ~val;
+		val = val & 0x0020;
 		break;
 
 	}
 
+	printk(KERN_ERR "jack detect val %d \n", val);
+	
 	switch (val) {
 	/* jack in */
 	case 0x30: /* 2 port */
@@ -3588,6 +3598,23 @@ static const struct dmi_system_id dmi_platform_intel_braswell[] = {
 	{ }
 };
 
+static struct rt5645_platform_data general_platform_data2 = {
+	.dmic1_data_pin = RT5645_DMIC_DATA_IN2N,
+	.dmic2_data_pin = RT5645_DMIC2_DISABLE,
+	.jd_mode = 3,
+};
+
+static struct dmi_system_id dmi_platform_intel_cht[] = {
+	{
+		.ident = "ASUS T100HAN",
+		.matches = {
+			DMI_EXACT_MATCH(DMI_SYS_VENDOR, "ASUSTeK COMPUTER INC."),
+			DMI_MATCH(DMI_PRODUCT_NAME, "T100HAN"),
+		},
+	},
+	{ }
+};
+
 static struct rt5645_platform_data buddy_platform_data = {
 	.dmic1_data_pin = RT5645_DMIC_DATA_GPIO5,
 	.dmic2_data_pin = RT5645_DMIC_DATA_IN2P,
@@ -3655,6 +3682,10 @@ static int rt5645_i2c_probe(struct i2c_client *i2c,
 		rt5645_parse_dt(rt5645, &i2c->dev);
 	else if (dmi_check_system(dmi_platform_intel_braswell))
 		rt5645->pdata = general_platform_data;
+	else if (dmi_check_system(dmi_platform_intel_cht))
+		rt5645->pdata = general_platform_data2;
+	else
+		rt5645->pdata.jd_mode = 3;
 
 	rt5645->gpiod_hp_det = devm_gpiod_get_optional(&i2c->dev, "hp-detect",
 						       GPIOD_IN);
